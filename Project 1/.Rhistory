setwd("~/Documents/School/RStudio Workspace.nosync/Project 1")
pacman::p_load(tidyverse, magrittr, jsonlite, igraph, robustHD, caret, pROC, R.utils)
df = read.csv("MSSQL.csv", stringsAsFactors = F, nrows = 900000)
View(df)
df %<>% select(c(Source.IP, Destination.IP, Total.Fwd.Packets, Total.Backward.Packets,
Fwd.IAT.Total, Bwd.IAT.Total, Fwd.PSH.Flags,
Bwd.Header.Length, Fwd.Packets.s,
Bwd.Packets.s, Min.Packet.Length, Max.Packet.Length, Average.Packet.Size, Active.Mean, Idle.Mean, SimillarHTTP,
Inbound, Label))
str(df)
summary(df)
df = select(df,-SimillarHTTP)
df = select(df,-Source.IP)
df = select(df,-Destination.IP)
df$Inbound = as.factor(df$Inbound)
df$Fwd.PSH.Flags = as.factor(df$Fwd.PSH.Flags)
View(df)
df$Label = recode_factor(df$Label, "1"="LDAP", "0"="Benign")
ggplot(df,aes(x=Label, y=Active.Mean)) + geom_point()+ggtitle("Scatter Plot of Active Mean")
ggplot(df,aes(x=Average.Packet.Size)) + geom_histogram(bins=20) + ggtitle("Histogram: Average.Packet.Size")
df_grouped1 = df %>% group_by(Label) %>% select_if(is.numeric) %>% summarise_all(list(avg = mean, stdDev = sd))
View(df_grouped1)
df$Label = recode_factor(df$Label, "2"="MSSQL", "1"="LDAP", "0"="Benign")
ggplot(df,aes(x=Label, y=Active.Mean)) + geom_point()+ggtitle("Scatter Plot of Active Mean")
ggplot(df,aes(x=Average.Packet.Size)) + geom_histogram(bins=20) + ggtitle("Histogram: Average.Packet.Size")
View(df)
?recode_factor
df_grouped1 = df %>% group_by(Label) %>% select_if(is.numeric) %>% summarise_all(list(avg = mean, stdDev = sd))
df_grouped1
View(df_grouped1)
ggplot(df,aes(x=Label) + geom_histogram(bins=20) + ggtitle("Histogram: Average.Packet.Size")
ggplot(df,aes(x=Label, y=Average.Packet.Size)) + geom_point()+ggtitle("Scatter Plot of Active Mean")
ggplot(df,aes(x=Label, y=Average.Packet.Size)) + geom_point()+ggtitle("Scatter Plot of Average Packet Size")
df = read.csv("Portmap.csv", stringsAsFactors = F)
df %<>% select(c(Source.IP, Destination.IP, Total.Fwd.Packets, Total.Backward.Packets,
Fwd.IAT.Total, Bwd.IAT.Total, Fwd.PSH.Flags,
Bwd.Header.Length, Fwd.Packets.s,
Bwd.Packets.s, Min.Packet.Length, Max.Packet.Length, Average.Packet.Size, Active.Mean, Idle.Mean, SimillarHTTP,
Inbound, Label))
df = select(df,-SimillarHTTP)
df = select(df,-Source.IP)
df = select(df,-Destination.IP)
df_grouped1 = df %>% group_by(Label) %>% select_if(is.numeric) %>% summarise_all(list(avg = mean, stdDev = sd))
View(df_grouped1)
?set.seed
df = read.csv("MSSQL.csv", stringsAsFactors = F, nrows = 900000)
?readLines
?read_csv
?read.csv
?read.table
pacman::p_load(tidyverse, magrittr, jsonlite, igraph, robustHD, caret, pROC, devtools)
install_github("ltorgo/DMwR2",ref="master")
?sampleCSV
df2 = sampleCSV("MSSQL.csv", header = T, mxPerc=0.1)
df2 = DMwR2::sampleCSV("MSSQL.csv", mxPerc = 0.1)
df2 = DMwR2::sampleCSV("MSSQL.csv", percORn = 0.1)
View(df2)
View(df2)
df2 = DMwR2::sampleCSV("MSSQL.csv", percORn = 0.05, header = TRUE)
View(df2)
df2 = DMwR2::sampleCSV("MSSQL.csv", percORn = 0.05, header = FALSE)
View(df2)
columnNames = read.csv("MSSQL.csv", nrows = 1)
View(columnNames)
columnNames = read.csv("MSSQL.csv", nrows = 0)
View(columnNames)
columnNames = read.csv("MSSQL.csv", nrows = 1, header = FALSE)
View(columnNames)
?colnames
colnames(df2) <- c(columnNames[])
View(df2)
columnNames2 = df.to_string(columnNames)
colnames(df2) <- columnNames
View(df2)
colnames(df2) <- columnNames[1]
colnames(df2) <- columnNames[1,]
?split.data.frame
?for
?for
for(name in c(columnNames)) {
colnames(df2) <- name
}
for(name in columNames) {
colnames(df2) <- name
}
for(name in columnNames) {
colnames(df2) <- name
}
for(i in colnames(columnNames)) {
colnames(df2) <- columnNames[i]
}
for(i in 1:88) {
colnames(df2) <- columnNames[i]
}
columnNames = read.csv("MSSQL.csv", nrows = 1, header = TRUE)
for(name in colnames(columnNames)) {
colnames(df2) <- name
}
for(name in colnames(columnNames)) {
print(name)
colnames(df2) <- name
}
colnames(df2) <- colnames(columnNames)
columnNames = read.csv("MSSQL.csv", nrows = 1, header = TRUE)
df2 = DMwR2::sampleCSV("MSSQL.csv", percORn = 0.15, header = FALSE)
colnames(df2) <- colnames(columnNames)
df2 %<>% select(c(Source.IP, Destination.IP, Total.Fwd.Packets, Total.Backward.Packets,
Fwd.IAT.Total, Bwd.IAT.Total, Fwd.PSH.Flags,
Bwd.Header.Length, Fwd.Packets.s,
Bwd.Packets.s, Min.Packet.Length, Max.Packet.Length, Average.Packet.Size, Active.Mean, Idle.Mean, SimillarHTTP,
Inbound, Label))
df = select(df,-SimillarHTTP)
df = select(df,-Source.IP)
df = select(df,-Destination.IP)
df2 = select(df2,-SimillarHTTP)
df2 = select(df2,-Source.IP)
df2 = select(df2,-Destination.IP)
ggplot(df,aes(x=Label, y=Active.Mean)) + geom_point()+ggtitle("Scatter Plot of Active Mean")
summary(df2)
?DMwR2::sampleCSV
str(df2)
summary(df2)
?summary
df_grouped1
View(df_grouped1)
df_grouped1 = df2 %>% group_by(Label) %>% select_if(is.numeric) %>% summarise_all(list(avg = mean, stdDev = sd))
df_grouped2 = df2 %>% group_by(Label) %>% select_if(is.numeric) %>% summarise_all(list(avg = mean, stdDev = sd))
df_grouped1 = df %>% group_by(Label) %>% select_if(is.numeric) %>% summarise_all(list(avg = mean, stdDev = sd))
compare(df_grouped2, df_grouped1)
list(df_grouped2)
df_grouped2 = df2 %>% group_by(Label) %>% select_if(is.numeric) %>% summarise_all(list(avg = mean, stdDev = sd)) %>% list()
View(df_grouped2)
compare(df_grouped2, list(df_grouped1))
df_grouped2 = df2 %>% group_by(Label) %>% select_if(is.numeric) %>% summarise_all(list(avg = mean, stdDev = sd))
df = read.csv("Portmap.csv", stringsAsFactors = F)
df %<>% select(c(Source.IP, Destination.IP, Total.Fwd.Packets, Total.Backward.Packets,
Fwd.IAT.Total, Bwd.IAT.Total, Fwd.PSH.Flags,
Bwd.Header.Length, Fwd.Packets.s,
Bwd.Packets.s, Min.Packet.Length, Max.Packet.Length, Average.Packet.Size, Active.Mean, Idle.Mean, SimillarHTTP,
Inbound, Label))
str(df)
summary(df)
df = select(df,-SimillarHTTP)
df = select(df,-Source.IP)
df = select(df,-Destination.IP)
df_grouped1 = df %>% group_by(Label) %>% select_if(is.numeric) %>% summarise_all(list(avg = mean, stdDev = sd))
which(df_grouped1 != df_grouped2)
df2 %<>% select(c(Total.Fwd.Packets, Total.Backward.Packets,
Fwd.IAT.Total, Bwd.IAT.Total, Fwd.PSH.Flags,
Bwd.Header.Length, Fwd.Packets.s,
Bwd.Packets.s, Min.Packet.Length, Max.Packet.Length, Average.Packet.Size, Active.Mean, Idle.Mean,
Inbound, Label))
summary(df2)
summary(df)
ggplot(df,aes(x=Label, y=Average.Packet.Size)) + geom_point() + ggtitle("Scatter Plot: Average.Packet.Size")
ggplot(df2,aes(x=Label, y=Average.Packet.Size)) + geom_point()+ggtitle("Scatter Plot of Average Packet Size 2")
ggplot(dfMSSQL,aes(x=Label, y=Average.Packet.Size)) + geom_histogram(bins=20)+ggtitle("MSSQL: Histogram of Average Packet Size")
MSSQLcolnames = read.csv("MSSQL.csv", nrows = 1, header = TRUE)
setwd("~/Documents/School/RStudio Workspace.nosync/Project 1")
pacman::p_load(tidyverse, magrittr, jsonlite, igraph, robustHD, caret, pROC, devtools)
install_github("ltorgo/DMwR2",ref="master")
MSSQLcolnames = read.csv("MSSQL.csv", nrows = 1, header = TRUE)
dfMSSQL = DMwR2::sampleCSV("MSSQL.csv", percORn = 0.15, header = FALSE)
colnames(dfMSSQL) <- colnames(MSSQLcolnames)
dfMSSQL %<>% select(c(Total.Fwd.Packets, Total.Backward.Packets,
Fwd.IAT.Total, Bwd.IAT.Total, Fwd.PSH.Flags,
Bwd.Header.Length, Fwd.Packets.s,
Bwd.Packets.s, Min.Packet.Length, Max.Packet.Length, Average.Packet.Size, Active.Mean, Idle.Mean,
Inbound, Label))
summary(dfMSSQL)
View(MSSQLcolnames)
View(dfMSSQL)
summary(dfMSSQL)
dfMSSQL = DMwR2::sampleCSV("MSSQL.csv", percORn = 0.15, header = TRUE)
colnames(dfMSSQL) <- colnames(MSSQLcolnames)
dfMSSQL %<>% select(c(Total.Fwd.Packets, Total.Backward.Packets,
Fwd.IAT.Total, Bwd.IAT.Total, Fwd.PSH.Flags,
Bwd.Header.Length, Fwd.Packets.s,
Bwd.Packets.s, Min.Packet.Length, Max.Packet.Length, Average.Packet.Size, Active.Mean, Idle.Mean,
Inbound, Label))
summary(dfMSSQL)
MSSQL_grouped = dfMSSQL %>% group_by(Label) %>% select_if(is.numeric) %>% summarise_all(list(avg = mean, stdDev = sd))
MSSQL_grouped
ggplot(dfMSSQL,aes(x=Label, y=Average.Packet.Size)) + geom_histogram(bins=20)+ggtitle("MSSQL: Histogram of Average Packet Size")
ggplot(dfMSSQL,aes(x=Average.Packet.Size)) + geom_histogram(bins=20)+ggtitle("MSSQL: Histogram of Average Packet Size")
ggplot(dfMSSQL,aes(x=Label, y=Active.Mean)) + geom_point()+ggtitle("MSSQL: Scatter Plot of Active Mean")
knitr::opts_chunk$set(echo = TRUE)
#UDPLag Dataset
UDPLagcolnames = read.csv("UDPLag.csv", nrows = 1, header = TRUE)
dfUDPLag = DMwR2::sampleCSV("UDPLag.csv", percORn = 0.15, header = TRUE)
colnames(dfUDPLag) <- colnames(UDPLagcolnames)
dfUDPLag %<>% select(c(Total.Fwd.Packets, Total.Backward.Packets,
Fwd.IAT.Total, Bwd.IAT.Total, Fwd.PSH.Flags,
Bwd.Header.Length, Fwd.Packets.s,
Bwd.Packets.s, Min.Packet.Length, Max.Packet.Length, Average.Packet.Size, Active.Mean, Idle.Mean,
Inbound, Label))
summary(dfUDPLag)
as.data.frame(MSSQL_grouped)
MSSQL_grouped = as.data.frame(MSSQL_grouped)
MSSQL_grouped = as.table(MSSQL_grouped)
MSSQL_grouped = data.frame(MSSQL_grouped)
MSSQL_grouped
data.frame(UDPLag_grouped)
data.frame(MSSQL_grouped)
MSSQL_grouped = data.frame(MSSQL_grouped)
MSSQL_grouped
MSSQL_grouped
MSSQL_grouped = dfMSSQL %>% group_by(Label) %>% select_if(is.numeric) %>% summarise_all(list(avg = mean, stdDev = sd)) %>% data.frame()
MSSQL_grouped
MSSQL_grouped = dfMSSQL %>% group_by(Label) %>% select_if(is.numeric) %>% summarise_all(list(avg = mean, stdDev = sd))
MSSQL_grouped
#MSSQL Dataset Visuals
ggplot(dfMSSQL,aes(x=Average.Packet.Size)) + geom_histogram(bins=20)+ggtitle("MSSQL: Histogram of Average Packet Size")
ggplot(dfMSSQL,aes(x=Label, y=Active.Mean)) + geom_point()+ggtitle("MSSQL: Scatter Plot of Active Mean")
MSSQL_grouped = dfMSSQL %>% group_by(Label) %>% select_if(is.numeric) %>% summarise_all(list(avg = mean, stdDev = sd)) %>% data.frame()
MSSQL_grouped
#UDPLag Dataset Visuals
ggplot(dfUDPLag,aes(x=Average.Packet.Size)) + geom_histogram(bins=20)+ggtitle("UDPLag: Histogram of Average Packet Size")
ggplot(dfUDPLag,aes(x=Label, y=Active.Mean)) + geom_point()+ggtitle("UDPLag: Scatter Plot of Active Mean")
UDPLag_grouped = dfUDPLag %>% group_by(Label) %>% select_if(is.numeric) %>% summarise_all(list(avg = mean, stdDev = sd)) %>% data.frame()
UDPLag_grouped
dfUDPLag = DMwR2::sampleCSV("UDPLag.csv", percORn = 0.25, header = TRUE)
df = read.csv("Portmap.csv", stringsAsFactors = F)
